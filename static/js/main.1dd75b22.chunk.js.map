{"version":3,"sources":["components/Container/Container.module.scss","components/ContactsList/ContactsList.module.scss","components/FormContacts/FormContacts.module.scss","components/Section/Section.module.scss","components/Filter/Filter.module.scss","components/Container/Container.js","components/Section/Section.js","redux/phonebook/slice.js","components/FormContacts/FormContacts.js","redux/phonebook/actions.js","redux/phonebook/selectors.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","redux/phonebook/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","Section","title","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","FormContacts","contacts","useState","setName","setNumber","handleChange","e","target","value","Form","onSubmit","preventDefault","some","contact","toast","error","type","onChange","pattern","required","Btn","filterUpdate","createAction","getFilter","state","filtre","filter","Filter","useSelector","dispatch","useDispatch","ContactsList","loading","filterEl","data","keyWord","normalizedFilter","toLowerCase","includes","getVisibleContacts","List","Loader","color","width","map","id","onClick","App","isFetching","createReducer","_","payload","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dd75b22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1Jigt\",\"App\":\"Container_App__5qChC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactsList_List__2Cg-a\",\"Btn\":\"ContactsList_Btn__1oF36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__12-qn\",\"Btn\":\"FormContacts_Btn__JOEsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__22LfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3PiX6\"};","import styles from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import styles from './Section.module.scss';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.Section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://616dbd44a83a850017caa6ef.mockapi.io/api/v1/' }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => 'contacts/',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: 'contacts/',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;","import { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useCreateContactMutation } from 'redux/phonebook/slice';\nimport styles from './FormContacts.module.scss';\n\nconst FormContacts = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const coincidenceContacts = contacts.some(\n      contact => contact.name === name);\n    \n    if (coincidenceContacts) {\n      toast.error(`${name} is already in contacts`);\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    createContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n  \n\n  return (\n    <>\n    <ToastContainer />\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n        <button\n          type=\"submit\"\n          className={styles.Btn}\n        >\n        Add contact\n      </button>\n      </form>\n      </>\n  );\n};\n\nexport default FormContacts;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterUpdate = createAction('phonebook/FilterUpdate');\r\n\r\n","export const getFilter = state => state.filtre.filter;\r\n\r\nexport const getVisibleContacts = (data, keyWord) => {\r\n  const normalizedFilter = keyWord.toLowerCase();\r\n\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  return data.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useSelector, useDispatch } from 'react-redux';\nimport {filterUpdate} from 'redux/phonebook/actions';\nimport { getFilter } from 'redux/phonebook/selectors';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e =>\n    dispatch(filterUpdate(e.target.value));\n\n  return (\n    <label className={styles.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange} />\n    </label>\n  );\n};\n\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/phonebook/slice';\nimport { getFilter, getVisibleContacts } from 'redux/phonebook/selectors';\n\nimport styles from './ContactsList.module.scss';\n\nconst ContactsList = ({ contacts, loading }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const keyWord = useSelector(getFilter); \n  \n  const filterEl = getVisibleContacts(contacts, keyWord);\n\n  return (\n    <ul className={styles.List}>\n      {loading && (\n        <div className={styles.Loader}>\n          <Loader\n            type=\"Puff\"\n            color=\"#3f51b5\"            \n            width={50}\n          />\n        </div>\n      )}\n      {filterEl &&\n        filterEl.map(({id, name, number}) => (\n          <li key={id} >\n            {name}: {number}\n            <button\n              className={styles.Btn}\n              type=\"button\"\n              onClick={() =>deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\n\nexport default ContactsList;\n","import Container from './components/Container';\nimport Section from './components/Section';\nimport Form from './components/FormContacts';\nimport Filter from './components/Filter';\nimport ContactsList from './components/ContactsList';\nimport { useFetchContactsQuery } from 'redux/phonebook/slice';\n\nimport styles from 'components/Container/Container.module.scss';\n\nfunction App() {\n  const { data, isFetching } = useFetchContactsQuery();\n  return (\n    <Container>\n      <div className={styles.App}>\n        <Section title=\"Phonebook\">\n          <Form contacts={data} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList contacts={data} loading={isFetching} />\n        </Section>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {filterUpdate} from \"./actions\";\r\n\r\nconst filter = createReducer('', {\r\n  [filterUpdate]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport filtre from \"./phonebook/reducer\";\r\nimport { contactsApi } from './phonebook/slice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filtre,\r\n   [contactsApi.reducerPath]: contactsApi.reducer,\r\n   },\r\n   middleware: getDefaultMiddleware => [\r\n     ...getDefaultMiddleware(),\r\n     contactsApi.middleware,\r\n   ],\r\n   devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}